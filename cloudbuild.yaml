## Gera a imagem docker da app1 utilizando o Dockerfile 
steps:
- name: 'gcr.io/cloud-builders/docker'
  args: ['build', '-t', 'us-east4-docker.pkg.dev/_PROJECT_ID/gke-repo/quickstart-image', './app1' ]
  id: 'Build Docker Image'

## Empurra a image gerada para o repositorio 
- name: 'gcr.io/cloud-builders/docker'
  args: ['push', 'us-east4-docker.pkg.dev/_PROJECT_ID/gke-repo/quickstart-image' ]
  id: 'Push Docker Image'

## Define a pipeline dentro do diretorio deploy linha 20
## Define qual deployment executar na linha 22 nesse caso prod onde tem todos os parametros definidos tal qual a localização do cluster
## Pra cada ambiente é necessário especificar o cluster gke sera aplicado

- name: 'google/cloud-sdk:latest'
  entrypoint: 'sh'
  args:
  - -xe
  - -c
  - |
    gcloud deploy apply --file deploy/pipeline.yaml --region=us-east4
    gcloud deploy apply --file deploy/prod.yaml --region=us-east4

    gcloud deploy releases create 'app-release-${SHORT_SHA}' --delivery-pipeline=gke-cicd-pipeline --region=us-east4 --from-k8s-manifest=./kubernetes/app1.yaml


options:
  logging: CLOUD_LOGGING_ONLY


substitutions:
  _PROJECT_ID : long-arcadia-413520
  

